name: Nightly reports
            - name: Cache
  uses: actions/cache@v4.0.0
  with:
    # A list of files, directories, and wildcard patterns to cache and restore
    path: 
    # An explicit key for restoring and saving the cache
    key: 
    # An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
    restore-keys: # optional
    # The chunk size used to split up large files during upload, in bytes
    upload-chunk-size: # optional
    # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
    enableCrossOsArchive: # optional, default is false
    # Fail the workflow if cache entry is not found
    fail-on-cache-miss: # optional, default is false
    # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
    lookup-only: # optional, default is false
    # Run the post step to save the cache even if another step before fails
    save-always: # optional, default is false
          
on:
  workflow_dispatch:
  schedule:
    # Every nights at 5
    - cron: "0 5 * * *"

# Enrich gradle.properties for CI/CD
env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3g -Dfile.encoding=UTF-8 -XX:+HeapDumpOnOutOfMemoryError" -Dkotlin.daemon.jvm.options="-Xmx2560m" -Dkotlin.incremental=false -XX:+UseParallelGC
  CI_GRADLE_ARG_PROPERTIES: --stacktrace -PpreDexEnable=false --max-workers 4

jobs:
  nightlyReports:
    name: Create kover report artifact and upload sonar result.
    runs-on: ubuntu-latest
    if: ${{ github.repository == 'element-hq/element-x-android' }}
    steps:
      - name: ‚è¨ Checkout with LFS
        uses: nschloe/action-cached-lfs-checkout@v1.2.2

      - name: Use JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'

      - name: ‚öôÔ∏è Run unit tests, debug and release
        run: ./gradlew test $CI_GRADLE_ARG_PROPERTIES

      - name: üì∏ Run screenshot tests
        run: ./gradlew verifyPaparazziDebug $CI_GRADLE_ARG_PROPERTIES

      - name: üìà Generate kover report and verify coverage
        run: ./gradlew :app:koverHtmlReport :app:koverXmlReport :app:koverVerify $CI_GRADLE_ARG_PROPERTIES -Pci-build=true

      - name: ‚úÖ Upload kover report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kover-results
          path: |
            **/build/reports/kover

      - name: üîä Publish results to Sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          ORG_GRADLE_PROJECT_SONAR_LOGIN: ${{ secrets.SONAR_TOKEN }}
        if: ${{ always() && env.SONAR_TOKEN != '' && env.ORG_GRADLE_PROJECT_SONAR_LOGIN != '' }}
        run: ./gradlew sonar $CI_GRADLE_ARG_PROPERTIES

  # Gradle dependency analysis using https://github.com/autonomousapps/dependency-analysis-android-gradle-plugin
  dependency-analysis:
    name: Dependency analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
      - name: Configure gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/develop' }}
      - name: Dependency analysis
        run: ./gradlew dependencyCheckAnalyze $CI_GRADLE_ARG_PROPERTIES
      - name: Upload dependency analysis
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-analysis
          path: build/reports/dependency-check-report.html
